#!/bin/bash

function help {
    echo "Usage: $0 [-v] [ALERT_ATTRS] STATUS SUBJECT [SUBJECT [...]]"
}

function get_status {
    case "$1" in
        ok) ret=ok ;;
        warn) ret=warning ;;
        crit) ret=critical ;;
        ack) ret=acknowledged ;;
        *) ret=
    esac

    echo $ret
}

function usage {
    echo "Usage: $0 COMMAND arguments"
    echo
    echo "Run '$0 help' for more info"
}

function parse_args {
    while [ -n "$1" ]; do
        case "$1" in
            -h|--help)
                help $command
                exit
                ;;
            -p|--primary)
                shift
                if [ -z "$1" ]; then
                    echo "$0: missing primary attribute name"
                    exit 1
                fi
                PRIMARY_KEY=$1
                ;;
            -s|--secondary)
                shift
                if [ -z "$1" ]; then
                    echo "$0: missing secondary attribute name"
                    exit 1
                fi
                SECONDARY_KEY=$1
                ;;
            -d|--description)
                shift
                if [ -z "$1" ]; then
                    echo "$0: missing description for -d"
                    exit 1
                fi
                DESCRIPTION=$1
                ;;
            -c|--cluster)
                shift
                if [ -z "$1" ]; then
                    echo "$0: missing cluster for -C"
                    exit 1
                fi
                CLUSTER=$1
                ;;
            -t|--time)
                shift
                if [ -z "$1" ]; then
                    echo "$0: missing timestamp for -t"
                    exit 1
                fi
                TIMESTAMP=$1
                ;;
            -e|--extra-attr)
                shift
                if [ -z "$1" ] || ! [[ "$1" =~ = ]]; then
                    echo "$0: missing attribute and value"
                fi
                EXTRA_ATTRS+=($1)
                ;;
            -v) VERBOSE=1 ;;
            -*)
                echo "$0: Illegal option: $1"
                usage
                exit 1
                ;;
            *)
                if [ -z "$STATUS" ]; then
                    STATUS=`get_status "$1"`
                    if [ -z "$STATUS" ]; then
                        echo "$0: Invalid status $1">&2
                        exit 1
                    fi
                elif [ -z "$PRIMARY_VALUE" ]; then
                    PRIMARY_VALUE=$1
                elif [ -z "$SECONDARY_VALUE" ]; then
                    SECONDARY_VALUE=$1
                else
                    echo "$0: Too many arguments." >&2
                    exit 1
                fi
        esac
        shift
    done

    if [ -z "$APP_NAME" -o -z "$VERSION" -o -z "$HOSTS" ]; then
        echo "$0: missing component, version or host" >&2
        exit 1
    fi
}

function api_call {
    curl -# -f -i -X POST -H "Authorization: Bearer $BP_API_TOKEN" -H "Content-Type: application/json" -d "@$TMPFILE" "$@"
}

TMPFILE=/tmp/bigpanda_incident
BASE_URL="https://api.bigpanda.io"
VERBOSE=0
PRIMARY_KEY=host
SECONDARY_KEY=check
PRIMARY_VALUE=
SECONDARY_VALUE=
STATUS=
TIMESTAMP=
DESCRIPTION=
CLUSTER=

parse_args "$@"

if [ -z "$BP_API_TOKEN" -o -z "$BP_APP_KEY" ]; then
    echo "$0: Please set \$BP_API_TOKEN and \$BP_APP_KEY." >&2
    exit 1
fi
